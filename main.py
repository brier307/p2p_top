import asyncio
import re
import time

from auth import auth_check_account, auth_main_account
from config import your_nick

top_nick = ''
top_price = None
second_nick = ''
second_price = None


def get_order_amount():
    while True:
        amount = input("–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É (—Ç—ñ–ª—å–∫–∏ —Ü–∏—Ñ—Ä–∏): ")
        if amount.isdigit():
            return amount
        print("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Ç—ñ–ª—å–∫–∏ —Ü–∏—Ñ—Ä–∏!")


async def update_price(client_main, new_price):
    """–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω—ã"""
    await client_main.send_message('CryptoBot', '/p2p')
    await asyncio.sleep(0.5)

    # –ù–∞—Ç–∏—Å–∫–∞—î–º–æ "–û–±—ä—è–≤–ª–µ–Ω–∏—è"
    async for message in client_main.iter_messages('CryptoBot', limit=1):
        if message.buttons:
            for row in message.buttons:
                for button in row:
                    if "–û–±—ä—è–≤–ª–µ–Ω–∏—è" in button.text:
                        await button.click()
                        print(f"–ù–∞—Ç–∏—Å–Ω—É—Ç–æ –∫–Ω–æ–ø–∫—É: {button.text}")
                        await asyncio.sleep(0.5)

    # –ß–∏—Ç–∞–Ω–Ω—è —Ç–∞ –≤–∏–±—ñ—Ä –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ–≥–æ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è
    async for message in client_main.iter_messages('CryptoBot', limit=1):
        if message.buttons:
            found = False
            for row in message.buttons:
                if found:
                    break
                for button in row:
                    print(f"{button.text}")
                    if "‚Ç¥" in button.text:
                        match = re.search(r"–ü—Ä–æ–¥–∞–∂–∞.*‚Ç¥", button.text)
                        if match:
                            await button.click()
                            found = True
                            print(f"–ù–∞—Ç–∏—Å–Ω—É—Ç–æ –∫–Ω–æ–ø–∫—É: {button.text}")
                            break

    # –ù–∞—Ç–∏—Å–∫–∞—î–º–æ "–¶–µ–Ω–∞"
    async for message in client_main.iter_messages('CryptoBot', limit=1):
        if message.buttons:
            for row in message.buttons:
                for button in row:
                    if "–¶–µ–Ω–∞" in button.text:
                        await button.click()
                        print(f"–ù–∞—Ç–∏—Å–Ω—É—Ç–æ –∫–Ω–æ–ø–∫—É: {button.text}")
                        await asyncio.sleep(0.5)

    await client_main.send_message('CryptoBot', str(new_price))
    print("–í–∏—Å—Ç–∞–≤–ª–µ–Ω–æ —Ü—ñ–Ω—É:", new_price)
    await asyncio.sleep(0.5)

    async for message in client_main.iter_messages('CryptoBot', limit=1):
        if message.buttons:
            for row in message.buttons:
                for button in row:
                    if "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è" in button.text:
                        await button.click()
                        print(f"–ù–∞—Ç–∏—Å–Ω—É—Ç–æ –∫–Ω–æ–ø–∫—É: {button.text}")
                        await asyncio.sleep(0.5)


async def main_loop():
    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—É–º–∏ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (—Ç—ñ–ª—å–∫–∏ –æ–¥–∏–Ω —Ä–∞–∑ –ø–µ—Ä–µ–¥ —Ü–∏–∫–ª–æ–º)
    order_amount = get_order_amount()

    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –æ–±–æ—Ö –∞–∫–∞—É–Ω—Ç—ñ–≤ –æ–¥–∏–Ω —Ä–∞–∑ –ø–µ—Ä–µ–¥ —Ü–∏–∫–ª–æ–º
    client_check = await auth_check_account()
    if not client_check:
        print("–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó check –∞–∫–∞—É–Ω—Ç—É")
        return

    client_main = await auth_main_account()
    if not client_main:
        print("–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó main –∞–∫–∞—É–Ω—Ç—É")
        await client_check.disconnect()
        return

    try:
        while True:
            try:
                # –†–æ–±–æ—Ç–∞ –∑ –±–æ—Ç–æ–º —á–µ—Ä–µ–∑ –ø–µ—Ä—à–∏–π –∞–∫–∞—É–Ω—Ç
                await client_check.send_message('CryptoBot', '/p2p')
                await asyncio.sleep(0.5)

                # –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ –±–æ—Ç–∞ —Ç–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–∞—Ç—å"
                async for message in client_check.iter_messages('CryptoBot', limit=1):
                    if message.buttons:
                        for row in message.buttons:
                            for button in row:
                                if button.text == "üìâ –ü—Ä–æ–¥–∞—Ç—å":
                                    await button.click()
                                    print(f"–ù–∞—Ç–∏—Å–Ω—É—Ç–æ –∫–Ω–æ–ø–∫—É: {button.text}")
                                    await asyncio.sleep(0.5)
                # –û–±–∏—Ä–∞—î–º–æ "Tether"
                async for message in client_check.iter_messages('CryptoBot', limit=1):
                    if message.buttons:
                        for row in message.buttons:
                            for button in row:
                                if "Tether" in button.text:
                                    await button.click()
                                    print(f"–ù–∞—Ç–∏—Å–Ω—É—Ç–æ –∫–Ω–æ–ø–∫—É: {button.text}")
                                    await asyncio.sleep(0.5)
                # –û–±–∏—Ä–∞—î–º–æ "Monobank"
                async for message in client_check.iter_messages('CryptoBot', limit=1):
                    if message.buttons:
                        for row in message.buttons:
                            for button in row:
                                if "Monobank" in button.text:
                                    await button.click()
                                    print(f"–ù–∞—Ç–∏—Å–Ω—É—Ç–æ –∫–Ω–æ–ø–∫—É: {button.text}")
                                    await asyncio.sleep(0.5)
                # –í–∫–∞–∑–∞–Ω–Ω—è —Å—É–º–∏
                async for message in client_check.iter_messages('CryptoBot', limit=1):
                    if message.buttons:
                        for row in message.buttons:
                            for button in row:
                                if "–£–∫–∞–∑–∞—Ç—å —Å—É–º–º—É" in button.text:
                                    await button.click()
                                    print(f"–ù–∞—Ç–∏—Å–Ω—É—Ç–æ –∫–Ω–æ–ø–∫—É: {button.text}")
                                    await asyncio.sleep(0.5)

                # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Å—É–º–∏
                await client_check.send_message('CryptoBot', order_amount)
                await asyncio.sleep(0.5)

                # –ß–∏—Ç–∞–Ω–Ω—è —Ç–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –∫–Ω–æ–ø–æ–∫ –∑ —Ü—ñ–Ω–∞–º–∏
                async for message in client_check.iter_messages('CryptoBot', limit=1):
                    if message.buttons:
                        sellers_found = 0
                        for row in message.buttons:
                            if sellers_found >= 2:
                                break
                            for button in row:
                                print(f"{button.text}")
                                if "‚Ç¥" in button.text:
                                    match = re.search(r"([A-Za-z0-9_\s]+)\s*¬∑\s*‚Ç¥([0-9.]+)", button.text)
                                    if match:
                                        if sellers_found == 0:
                                            global top_nick, top_price
                                            top_nick = match.group(1).strip()
                                            top_price = float(match.group(2))
                                            print(f"–ü–µ—Ä—à–∏–π –ø—Ä–æ–¥–∞–≤–µ—Ü—å - –ù—ñ–∫–Ω–µ–π–º: {top_nick}, –¶—ñ–Ω–∞: {top_price}")
                                        elif sellers_found == 1:
                                            global second_nick, second_price
                                            second_nick = match.group(1).strip()
                                            second_price = float(match.group(2))
                                            print(f"–î—Ä—É–≥–∏–π –ø—Ä–æ–¥–∞–≤–µ—Ü—å - –ù—ñ–∫–Ω–µ–π–º: {second_nick}, –¶—ñ–Ω–∞: {second_price}")
                                        sellers_found += 1
                                        if sellers_found >= 2:
                                            break

                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã
                if top_nick == your_nick:
                    print(f"–í–∏ –Ω–∞ –ø–µ—Ä—à—ñ–π –ø–æ–∑–∏—Ü—ñ—ó")
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–ª–∏—à–∫–æ–º –ª–∏ –±–æ–ª—å—à–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ —Å –≤—Ç–æ—Ä—ã–º –º–µ—Å—Ç–æ–º
                    if second_price and (top_price - second_price) > 0.05:
                        print(f"–†—ñ–∑–Ω–∏—Ü—è –∑ –¥—Ä—É–≥–∏–º –º—ñ—Å—Ü–µ–º –∑–∞–≤–µ–ª–∏–∫–∞ ({top_price - second_price}), –∑–º—ñ–Ω—é—î–º–æ —Ü—ñ–Ω—É")
                        new_price = second_price + 0.01
                        await update_price(client_main, new_price)
                    else:
                        print("–†—ñ–∑–Ω–∏—Ü—è –∑ –¥—Ä—É–≥–∏–º –º—ñ—Å—Ü–µ–º –≤ –Ω–æ—Ä–º—ñ")
                else:
                    print(f"–í–∏ –Ω–µ –Ω–∞ –ø–µ—Ä—à—ñ–π –ø–æ–∑–∏—Ü—ñ—ó, –∑–º—ñ–Ω—é—î–º–æ —Ü—ñ–Ω—É")
                    new_price = top_price + 0.01
                    await update_price(client_main, new_price)

                # –ß–µ–∫–∞—î–º–æ 3 —Ö–≤–∏–ª–∏–Ω–∏ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —ñ—Ç–µ—Ä–∞—Ü—ñ—î—é
                print("–û—á—ñ–∫—É–≤–∞–Ω–Ω—è 3 —Ö–≤–∏–ª–∏–Ω–∏ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é...")
                await asyncio.sleep(180)  # 3 —Ö–≤–∏–ª–∏–Ω–∏ = 180 —Å–µ–∫—É–Ω–¥

            except Exception as e:
                print(f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è: {e}")
                print("–û—á—ñ–∫—É–≤–∞–Ω–Ω—è 20 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ—é —Å–ø—Ä–æ–±–æ—é...")
                await asyncio.sleep(20)

    finally:
        # –í—ñ–¥–∫–ª—é—á–∞—î–º–æ –∫–ª—ñ—î–Ω—Ç–∏ —Ç—ñ–ª—å–∫–∏ –ø—Ä–∏ –ø–æ–≤–Ω–æ–º—É –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏
        await client_check.disconnect()
        await client_main.disconnect()


if __name__ == '__main__':
    asyncio.run(main_loop())
